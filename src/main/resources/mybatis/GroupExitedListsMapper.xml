<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rcloud.server.sealtalk.dao.GroupExitedListsMapper">
  <resultMap id="BaseResultMap" type="com.rcloud.server.sealtalk.domain.GroupExitedLists">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="groupId" jdbcType="INTEGER" property="groupId" />
    <result column="quitUserId" jdbcType="INTEGER" property="quitUserId" />
    <result column="quitNickname" jdbcType="VARCHAR" property="quitNickname" />
    <result column="quitPortraitUri" jdbcType="VARCHAR" property="quitPortraitUri" />
    <result column="quitReason" jdbcType="INTEGER" property="quitReason" />
    <result column="quitTime" jdbcType="BIGINT" property="quitTime" />
    <result column="operatorId" jdbcType="INTEGER" property="operatorId" />
    <result column="operatorName" jdbcType="VARCHAR" property="operatorName" />
    <result column="createdAt" jdbcType="TIMESTAMP" property="createdAt" />
    <result column="updatedAt" jdbcType="TIMESTAMP" property="updatedAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, groupId, quitUserId, quitNickname, quitPortraitUri, quitReason, quitTime, operatorId, 
    operatorName, createdAt, updatedAt
  </sql>
  <select id="selectByExample" parameterType="com.rcloud.server.sealtalk.domain.GroupExitedListsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from group_exited_lists
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, groupId, quitUserId, quitNickname, quitPortraitUri, quitReason, quitTime, operatorId, 
          operatorName, createdAt, updatedAt
      </otherwise>
    </choose>
    from group_exited_lists
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from group_exited_lists
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, groupId, quitUserId, quitNickname, quitPortraitUri, quitReason, quitTime, operatorId, 
          operatorName, createdAt, updatedAt
      </otherwise>
    </choose>
    from group_exited_lists
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from group_exited_lists
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rcloud.server.sealtalk.domain.GroupExitedListsExample">
    delete from group_exited_lists
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rcloud.server.sealtalk.domain.GroupExitedLists">
    insert into group_exited_lists (id, groupId, quitUserId, 
      quitNickname, quitPortraitUri, quitReason, 
      quitTime, operatorId, operatorName, 
      createdAt, updatedAt)
    values (#{id,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{quitUserId,jdbcType=INTEGER}, 
      #{quitNickname,jdbcType=VARCHAR}, #{quitPortraitUri,jdbcType=VARCHAR}, #{quitReason,jdbcType=INTEGER}, 
      #{quitTime,jdbcType=BIGINT}, #{operatorId,jdbcType=INTEGER}, #{operatorName,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into group_exited_lists
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.groupId != null">
            groupId,
          </if>
          <if test="record.quitUserId != null">
            quitUserId,
          </if>
          <if test="record.quitNickname != null">
            quitNickname,
          </if>
          <if test="record.quitPortraitUri != null">
            quitPortraitUri,
          </if>
          <if test="record.quitReason != null">
            quitReason,
          </if>
          <if test="record.quitTime != null">
            quitTime,
          </if>
          <if test="record.operatorId != null">
            operatorId,
          </if>
          <if test="record.operatorName != null">
            operatorName,
          </if>
          <if test="record.createdAt != null">
            createdAt,
          </if>
          <if test="record.updatedAt != null">
            updatedAt,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.groupId != null">
            #{record.groupId,jdbcType=INTEGER},
          </if>
          <if test="record.quitUserId != null">
            #{record.quitUserId,jdbcType=INTEGER},
          </if>
          <if test="record.quitNickname != null">
            #{record.quitNickname,jdbcType=VARCHAR},
          </if>
          <if test="record.quitPortraitUri != null">
            #{record.quitPortraitUri,jdbcType=VARCHAR},
          </if>
          <if test="record.quitReason != null">
            #{record.quitReason,jdbcType=INTEGER},
          </if>
          <if test="record.quitTime != null">
            #{record.quitTime,jdbcType=BIGINT},
          </if>
          <if test="record.operatorId != null">
            #{record.operatorId,jdbcType=INTEGER},
          </if>
          <if test="record.operatorName != null">
            #{record.operatorName,jdbcType=VARCHAR},
          </if>
          <if test="record.createdAt != null">
            #{record.createdAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updatedAt != null">
            #{record.updatedAt,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.rcloud.server.sealtalk.domain.GroupExitedListsExample" resultType="java.lang.Long">
    select count(*) from group_exited_lists
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update group_exited_lists
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.groupId != null">
            groupId = #{record.groupId,jdbcType=INTEGER},
          </if>
          <if test="record.quitUserId != null">
            quitUserId = #{record.quitUserId,jdbcType=INTEGER},
          </if>
          <if test="record.quitNickname != null">
            quitNickname = #{record.quitNickname,jdbcType=VARCHAR},
          </if>
          <if test="record.quitPortraitUri != null">
            quitPortraitUri = #{record.quitPortraitUri,jdbcType=VARCHAR},
          </if>
          <if test="record.quitReason != null">
            quitReason = #{record.quitReason,jdbcType=INTEGER},
          </if>
          <if test="record.quitTime != null">
            quitTime = #{record.quitTime,jdbcType=BIGINT},
          </if>
          <if test="record.operatorId != null">
            operatorId = #{record.operatorId,jdbcType=INTEGER},
          </if>
          <if test="record.operatorName != null">
            operatorName = #{record.operatorName,jdbcType=VARCHAR},
          </if>
          <if test="record.createdAt != null">
            createdAt = #{record.createdAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updatedAt != null">
            updatedAt = #{record.updatedAt,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update group_exited_lists
    set id = #{record.id,jdbcType=INTEGER},
      groupId = #{record.groupId,jdbcType=INTEGER},
      quitUserId = #{record.quitUserId,jdbcType=INTEGER},
      quitNickname = #{record.quitNickname,jdbcType=VARCHAR},
      quitPortraitUri = #{record.quitPortraitUri,jdbcType=VARCHAR},
      quitReason = #{record.quitReason,jdbcType=INTEGER},
      quitTime = #{record.quitTime,jdbcType=BIGINT},
      operatorId = #{record.operatorId,jdbcType=INTEGER},
      operatorName = #{record.operatorName,jdbcType=VARCHAR},
      createdAt = #{record.createdAt,jdbcType=TIMESTAMP},
      updatedAt = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update group_exited_lists
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.groupId != null">
            groupId = #{record.groupId,jdbcType=INTEGER},
          </if>
          <if test="record.quitUserId != null">
            quitUserId = #{record.quitUserId,jdbcType=INTEGER},
          </if>
          <if test="record.quitNickname != null">
            quitNickname = #{record.quitNickname,jdbcType=VARCHAR},
          </if>
          <if test="record.quitPortraitUri != null">
            quitPortraitUri = #{record.quitPortraitUri,jdbcType=VARCHAR},
          </if>
          <if test="record.quitReason != null">
            quitReason = #{record.quitReason,jdbcType=INTEGER},
          </if>
          <if test="record.quitTime != null">
            quitTime = #{record.quitTime,jdbcType=BIGINT},
          </if>
          <if test="record.operatorId != null">
            operatorId = #{record.operatorId,jdbcType=INTEGER},
          </if>
          <if test="record.operatorName != null">
            operatorName = #{record.operatorName,jdbcType=VARCHAR},
          </if>
          <if test="record.createdAt != null">
            createdAt = #{record.createdAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updatedAt != null">
            updatedAt = #{record.updatedAt,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rcloud.server.sealtalk.domain.GroupExitedLists">
    update group_exited_lists
    set groupId = #{groupId,jdbcType=INTEGER},
      quitUserId = #{quitUserId,jdbcType=INTEGER},
      quitNickname = #{quitNickname,jdbcType=VARCHAR},
      quitPortraitUri = #{quitPortraitUri,jdbcType=VARCHAR},
      quitReason = #{quitReason,jdbcType=INTEGER},
      quitTime = #{quitTime,jdbcType=BIGINT},
      operatorId = #{operatorId,jdbcType=INTEGER},
      operatorName = #{operatorName,jdbcType=VARCHAR},
      createdAt = #{createdAt,jdbcType=TIMESTAMP},
      updatedAt = #{updatedAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.rcloud.server.sealtalk.domain.GroupExitedListsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from group_exited_lists
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, groupId, quitUserId, quitNickname, quitPortraitUri, quitReason, quitTime, operatorId, 
          operatorName, createdAt, updatedAt
      </otherwise>
    </choose>
    from group_exited_lists
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into group_exited_lists
    (id, groupId, quitUserId, quitNickname, quitPortraitUri, quitReason, quitTime, operatorId, 
      operatorName, createdAt, updatedAt)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.groupId,jdbcType=INTEGER}, #{item.quitUserId,jdbcType=INTEGER}, 
        #{item.quitNickname,jdbcType=VARCHAR}, #{item.quitPortraitUri,jdbcType=VARCHAR}, 
        #{item.quitReason,jdbcType=INTEGER}, #{item.quitTime,jdbcType=BIGINT}, #{item.operatorId,jdbcType=INTEGER}, 
        #{item.operatorName,jdbcType=VARCHAR}, #{item.createdAt,jdbcType=TIMESTAMP}, #{item.updatedAt,jdbcType=TIMESTAMP}
        )
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into group_exited_lists (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'groupId'.toString() == column.value">
          #{item.groupId,jdbcType=INTEGER}
        </if>
        <if test="'quitUserId'.toString() == column.value">
          #{item.quitUserId,jdbcType=INTEGER}
        </if>
        <if test="'quitNickname'.toString() == column.value">
          #{item.quitNickname,jdbcType=VARCHAR}
        </if>
        <if test="'quitPortraitUri'.toString() == column.value">
          #{item.quitPortraitUri,jdbcType=VARCHAR}
        </if>
        <if test="'quitReason'.toString() == column.value">
          #{item.quitReason,jdbcType=INTEGER}
        </if>
        <if test="'quitTime'.toString() == column.value">
          #{item.quitTime,jdbcType=BIGINT}
        </if>
        <if test="'operatorId'.toString() == column.value">
          #{item.operatorId,jdbcType=INTEGER}
        </if>
        <if test="'operatorName'.toString() == column.value">
          #{item.operatorName,jdbcType=VARCHAR}
        </if>
        <if test="'createdAt'.toString() == column.value">
          #{item.createdAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'updatedAt'.toString() == column.value">
          #{item.updatedAt,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into group_exited_lists
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.groupId != null">
            groupId,
          </if>
          <if test="record.quitUserId != null">
            quitUserId,
          </if>
          <if test="record.quitNickname != null">
            quitNickname,
          </if>
          <if test="record.quitPortraitUri != null">
            quitPortraitUri,
          </if>
          <if test="record.quitReason != null">
            quitReason,
          </if>
          <if test="record.quitTime != null">
            quitTime,
          </if>
          <if test="record.operatorId != null">
            operatorId,
          </if>
          <if test="record.operatorName != null">
            operatorName,
          </if>
          <if test="record.createdAt != null">
            createdAt,
          </if>
          <if test="record.updatedAt != null">
            updatedAt,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.groupId != null">
            #{record.groupId,jdbcType=INTEGER},
          </if>
          <if test="record.quitUserId != null">
            #{record.quitUserId,jdbcType=INTEGER},
          </if>
          <if test="record.quitNickname != null">
            #{record.quitNickname,jdbcType=VARCHAR},
          </if>
          <if test="record.quitPortraitUri != null">
            #{record.quitPortraitUri,jdbcType=VARCHAR},
          </if>
          <if test="record.quitReason != null">
            #{record.quitReason,jdbcType=INTEGER},
          </if>
          <if test="record.quitTime != null">
            #{record.quitTime,jdbcType=BIGINT},
          </if>
          <if test="record.operatorId != null">
            #{record.operatorId,jdbcType=INTEGER},
          </if>
          <if test="record.operatorName != null">
            #{record.operatorName,jdbcType=VARCHAR},
          </if>
          <if test="record.createdAt != null">
            #{record.createdAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updatedAt != null">
            #{record.updatedAt,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    on duplicate key update 
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.groupId != null">
            groupId = #{record.groupId,jdbcType=INTEGER},
          </if>
          <if test="record.quitUserId != null">
            quitUserId = #{record.quitUserId,jdbcType=INTEGER},
          </if>
          <if test="record.quitNickname != null">
            quitNickname = #{record.quitNickname,jdbcType=VARCHAR},
          </if>
          <if test="record.quitPortraitUri != null">
            quitPortraitUri = #{record.quitPortraitUri,jdbcType=VARCHAR},
          </if>
          <if test="record.quitReason != null">
            quitReason = #{record.quitReason,jdbcType=INTEGER},
          </if>
          <if test="record.quitTime != null">
            quitTime = #{record.quitTime,jdbcType=BIGINT},
          </if>
          <if test="record.operatorId != null">
            operatorId = #{record.operatorId,jdbcType=INTEGER},
          </if>
          <if test="record.operatorName != null">
            operatorName = #{record.operatorName,jdbcType=VARCHAR},
          </if>
          <if test="record.createdAt != null">
            createdAt = #{record.createdAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updatedAt != null">
            updatedAt = #{record.updatedAt,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <update id="upsertByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update group_exited_lists
    set
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.groupId != null">
            groupId = #{record.groupId,jdbcType=INTEGER},
          </if>
          <if test="record.quitUserId != null">
            quitUserId = #{record.quitUserId,jdbcType=INTEGER},
          </if>
          <if test="record.quitNickname != null">
            quitNickname = #{record.quitNickname,jdbcType=VARCHAR},
          </if>
          <if test="record.quitPortraitUri != null">
            quitPortraitUri = #{record.quitPortraitUri,jdbcType=VARCHAR},
          </if>
          <if test="record.quitReason != null">
            quitReason = #{record.quitReason,jdbcType=INTEGER},
          </if>
          <if test="record.quitTime != null">
            quitTime = #{record.quitTime,jdbcType=BIGINT},
          </if>
          <if test="record.operatorId != null">
            operatorId = #{record.operatorId,jdbcType=INTEGER},
          </if>
          <if test="record.operatorName != null">
            operatorName = #{record.operatorName,jdbcType=VARCHAR},
          </if>
          <if test="record.createdAt != null">
            createdAt = #{record.createdAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updatedAt != null">
            updatedAt = #{record.updatedAt,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    ;
    insert into group_exited_lists
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.groupId != null">
            groupId,
          </if>
          <if test="record.quitUserId != null">
            quitUserId,
          </if>
          <if test="record.quitNickname != null">
            quitNickname,
          </if>
          <if test="record.quitPortraitUri != null">
            quitPortraitUri,
          </if>
          <if test="record.quitReason != null">
            quitReason,
          </if>
          <if test="record.quitTime != null">
            quitTime,
          </if>
          <if test="record.operatorId != null">
            operatorId,
          </if>
          <if test="record.operatorName != null">
            operatorName,
          </if>
          <if test="record.createdAt != null">
            createdAt,
          </if>
          <if test="record.updatedAt != null">
            updatedAt,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.groupId != null">
            #{record.groupId,jdbcType=INTEGER},
          </if>
          <if test="record.quitUserId != null">
            #{record.quitUserId,jdbcType=INTEGER},
          </if>
          <if test="record.quitNickname != null">
            #{record.quitNickname,jdbcType=VARCHAR},
          </if>
          <if test="record.quitPortraitUri != null">
            #{record.quitPortraitUri,jdbcType=VARCHAR},
          </if>
          <if test="record.quitReason != null">
            #{record.quitReason,jdbcType=INTEGER},
          </if>
          <if test="record.quitTime != null">
            #{record.quitTime,jdbcType=BIGINT},
          </if>
          <if test="record.operatorId != null">
            #{record.operatorId,jdbcType=INTEGER},
          </if>
          <if test="record.operatorName != null">
            #{record.operatorName,jdbcType=VARCHAR},
          </if>
          <if test="record.createdAt != null">
            #{record.createdAt,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updatedAt != null">
            #{record.updatedAt,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    from dual where not exists
    (
    select 1 from group_exited_lists
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )
  </update>
  <insert id="upsert" parameterType="com.rcloud.server.sealtalk.domain.GroupExitedLists">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into group_exited_lists
    (id, groupId, quitUserId, quitNickname, quitPortraitUri, quitReason, quitTime, operatorId, 
      operatorName, createdAt, updatedAt)
    values
    (#{id,jdbcType=INTEGER}, #{groupId,jdbcType=INTEGER}, #{quitUserId,jdbcType=INTEGER}, 
      #{quitNickname,jdbcType=VARCHAR}, #{quitPortraitUri,jdbcType=VARCHAR}, #{quitReason,jdbcType=INTEGER}, 
      #{quitTime,jdbcType=BIGINT}, #{operatorId,jdbcType=INTEGER}, #{operatorName,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP}, #{updatedAt,jdbcType=TIMESTAMP})
    on duplicate key update 
    id = #{id,jdbcType=INTEGER}, 
    groupId = #{groupId,jdbcType=INTEGER}, 
    quitUserId = #{quitUserId,jdbcType=INTEGER}, 
    quitNickname = #{quitNickname,jdbcType=VARCHAR}, 
    quitPortraitUri = #{quitPortraitUri,jdbcType=VARCHAR}, 
    quitReason = #{quitReason,jdbcType=INTEGER}, 
    quitTime = #{quitTime,jdbcType=BIGINT}, 
    operatorId = #{operatorId,jdbcType=INTEGER}, 
    operatorName = #{operatorName,jdbcType=VARCHAR}, 
    createdAt = #{createdAt,jdbcType=TIMESTAMP}, 
    updatedAt = #{updatedAt,jdbcType=TIMESTAMP}
  </insert>
  <update id="upsertByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update group_exited_lists
    set
    id = #{record.id,jdbcType=INTEGER}, 
    groupId = #{record.groupId,jdbcType=INTEGER}, 
    quitUserId = #{record.quitUserId,jdbcType=INTEGER}, 
    quitNickname = #{record.quitNickname,jdbcType=VARCHAR}, 
    quitPortraitUri = #{record.quitPortraitUri,jdbcType=VARCHAR}, 
    quitReason = #{record.quitReason,jdbcType=INTEGER}, 
    quitTime = #{record.quitTime,jdbcType=BIGINT}, 
    operatorId = #{record.operatorId,jdbcType=INTEGER}, 
    operatorName = #{record.operatorName,jdbcType=VARCHAR}, 
    createdAt = #{record.createdAt,jdbcType=TIMESTAMP}, 
    updatedAt = #{record.updatedAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    ;
    insert into group_exited_lists
    (id, groupId, quitUserId, quitNickname, quitPortraitUri, quitReason, quitTime, operatorId, 
      operatorName, createdAt, updatedAt)
    select
    #{record.id,jdbcType=INTEGER}, #{record.groupId,jdbcType=INTEGER}, #{record.quitUserId,jdbcType=INTEGER}, 
      #{record.quitNickname,jdbcType=VARCHAR}, #{record.quitPortraitUri,jdbcType=VARCHAR}, 
      #{record.quitReason,jdbcType=INTEGER}, #{record.quitTime,jdbcType=BIGINT}, #{record.operatorId,jdbcType=INTEGER}, 
      #{record.operatorName,jdbcType=VARCHAR}, #{record.createdAt,jdbcType=TIMESTAMP}, 
      #{record.updatedAt,jdbcType=TIMESTAMP}
    from dual where not exists
    (
    select 1 from group_exited_lists
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )
  </update>
  <insert id="batchUpsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into group_exited_lists (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'groupId'.toString() == column.value">
          #{item.groupId,jdbcType=INTEGER}
        </if>
        <if test="'quitUserId'.toString() == column.value">
          #{item.quitUserId,jdbcType=INTEGER}
        </if>
        <if test="'quitNickname'.toString() == column.value">
          #{item.quitNickname,jdbcType=VARCHAR}
        </if>
        <if test="'quitPortraitUri'.toString() == column.value">
          #{item.quitPortraitUri,jdbcType=VARCHAR}
        </if>
        <if test="'quitReason'.toString() == column.value">
          #{item.quitReason,jdbcType=INTEGER}
        </if>
        <if test="'quitTime'.toString() == column.value">
          #{item.quitTime,jdbcType=BIGINT}
        </if>
        <if test="'operatorId'.toString() == column.value">
          #{item.operatorId,jdbcType=INTEGER}
        </if>
        <if test="'operatorName'.toString() == column.value">
          #{item.operatorName,jdbcType=VARCHAR}
        </if>
        <if test="'createdAt'.toString() == column.value">
          #{item.createdAt,jdbcType=TIMESTAMP}
        </if>
        <if test="'updatedAt'.toString() == column.value">
          #{item.updatedAt,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
    on duplicate key update 
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName} = values(${column.escapedColumnName})
    </foreach>
  </insert>
  <insert id="batchUpsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into group_exited_lists
    (id, groupId, quitUserId, quitNickname, quitPortraitUri, quitReason, quitTime, operatorId, 
      operatorName, createdAt, updatedAt)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.groupId,jdbcType=INTEGER}, #{item.quitUserId,jdbcType=INTEGER}, 
        #{item.quitNickname,jdbcType=VARCHAR}, #{item.quitPortraitUri,jdbcType=VARCHAR}, 
        #{item.quitReason,jdbcType=INTEGER}, #{item.quitTime,jdbcType=BIGINT}, #{item.operatorId,jdbcType=INTEGER}, 
        #{item.operatorName,jdbcType=VARCHAR}, #{item.createdAt,jdbcType=TIMESTAMP}, #{item.updatedAt,jdbcType=TIMESTAMP}
        )
    </foreach>
    on duplicate key update 
    id = values(id),
    groupId = values(groupId),
    quitUserId = values(quitUserId),
    quitNickname = values(quitNickname),
    quitPortraitUri = values(quitPortraitUri),
    quitReason = values(quitReason),
    quitTime = values(quitTime),
    operatorId = values(operatorId),
    operatorName = values(operatorName),
    createdAt = values(createdAt),
    updatedAt = values(updatedAt)
  </insert>
</mapper>
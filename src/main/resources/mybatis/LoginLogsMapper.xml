<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rcloud.server.sealtalk.dao.LoginLogsMapper">
  <resultMap id="BaseResultMap" type="com.rcloud.server.sealtalk.domain.LoginLogs">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="userId" jdbcType="INTEGER" property="userId" />
    <result column="ipAddress" jdbcType="INTEGER" property="ipAddress" />
    <result column="os" jdbcType="VARCHAR" property="os" />
    <result column="osVersion" jdbcType="VARCHAR" property="osVersion" />
    <result column="carrier" jdbcType="VARCHAR" property="carrier" />
    <result column="device" jdbcType="VARCHAR" property="device" />
    <result column="manufacturer" jdbcType="VARCHAR" property="manufacturer" />
    <result column="userAgent" jdbcType="VARCHAR" property="userAgent" />
    <result column="createdAt" jdbcType="TIMESTAMP" property="createdAt" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, userId, ipAddress, os, osVersion, carrier, device, manufacturer, userAgent, createdAt
  </sql>
  <select id="selectByExample" parameterType="com.rcloud.server.sealtalk.domain.LoginLogsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from login_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, userId, ipAddress, os, osVersion, carrier, device, manufacturer, userAgent, createdAt
          
      </otherwise>
    </choose>
    from login_logs
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from login_logs
    where id = #{id,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, userId, ipAddress, os, osVersion, carrier, device, manufacturer, userAgent, createdAt
          
      </otherwise>
    </choose>
    from login_logs
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from login_logs
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rcloud.server.sealtalk.domain.LoginLogsExample">
    delete from login_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rcloud.server.sealtalk.domain.LoginLogs">
    insert into login_logs (id, userId, ipAddress, 
      os, osVersion, carrier, 
      device, manufacturer, userAgent, 
      createdAt)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{ipAddress,jdbcType=INTEGER}, 
      #{os,jdbcType=VARCHAR}, #{osVersion,jdbcType=VARCHAR}, #{carrier,jdbcType=VARCHAR}, 
      #{device,jdbcType=VARCHAR}, #{manufacturer,jdbcType=VARCHAR}, #{userAgent,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP})
  </insert>
  <insert id="insertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into login_logs
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.userId != null">
            userId,
          </if>
          <if test="record.ipAddress != null">
            ipAddress,
          </if>
          <if test="record.os != null">
            os,
          </if>
          <if test="record.osVersion != null">
            osVersion,
          </if>
          <if test="record.carrier != null">
            carrier,
          </if>
          <if test="record.device != null">
            device,
          </if>
          <if test="record.manufacturer != null">
            manufacturer,
          </if>
          <if test="record.userAgent != null">
            userAgent,
          </if>
          <if test="record.createdAt != null">
            createdAt,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.userId != null">
            #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.ipAddress != null">
            #{record.ipAddress,jdbcType=INTEGER},
          </if>
          <if test="record.os != null">
            #{record.os,jdbcType=VARCHAR},
          </if>
          <if test="record.osVersion != null">
            #{record.osVersion,jdbcType=VARCHAR},
          </if>
          <if test="record.carrier != null">
            #{record.carrier,jdbcType=VARCHAR},
          </if>
          <if test="record.device != null">
            #{record.device,jdbcType=VARCHAR},
          </if>
          <if test="record.manufacturer != null">
            #{record.manufacturer,jdbcType=VARCHAR},
          </if>
          <if test="record.userAgent != null">
            #{record.userAgent,jdbcType=VARCHAR},
          </if>
          <if test="record.createdAt != null">
            #{record.createdAt,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.rcloud.server.sealtalk.domain.LoginLogsExample" resultType="java.lang.Long">
    select count(*) from login_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update login_logs
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.userId != null">
            userId = #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.ipAddress != null">
            ipAddress = #{record.ipAddress,jdbcType=INTEGER},
          </if>
          <if test="record.os != null">
            os = #{record.os,jdbcType=VARCHAR},
          </if>
          <if test="record.osVersion != null">
            osVersion = #{record.osVersion,jdbcType=VARCHAR},
          </if>
          <if test="record.carrier != null">
            carrier = #{record.carrier,jdbcType=VARCHAR},
          </if>
          <if test="record.device != null">
            device = #{record.device,jdbcType=VARCHAR},
          </if>
          <if test="record.manufacturer != null">
            manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
          </if>
          <if test="record.userAgent != null">
            userAgent = #{record.userAgent,jdbcType=VARCHAR},
          </if>
          <if test="record.createdAt != null">
            createdAt = #{record.createdAt,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update login_logs
    set id = #{record.id,jdbcType=INTEGER},
      userId = #{record.userId,jdbcType=INTEGER},
      ipAddress = #{record.ipAddress,jdbcType=INTEGER},
      os = #{record.os,jdbcType=VARCHAR},
      osVersion = #{record.osVersion,jdbcType=VARCHAR},
      carrier = #{record.carrier,jdbcType=VARCHAR},
      device = #{record.device,jdbcType=VARCHAR},
      manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
      userAgent = #{record.userAgent,jdbcType=VARCHAR},
      createdAt = #{record.createdAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update login_logs
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.userId != null">
            userId = #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.ipAddress != null">
            ipAddress = #{record.ipAddress,jdbcType=INTEGER},
          </if>
          <if test="record.os != null">
            os = #{record.os,jdbcType=VARCHAR},
          </if>
          <if test="record.osVersion != null">
            osVersion = #{record.osVersion,jdbcType=VARCHAR},
          </if>
          <if test="record.carrier != null">
            carrier = #{record.carrier,jdbcType=VARCHAR},
          </if>
          <if test="record.device != null">
            device = #{record.device,jdbcType=VARCHAR},
          </if>
          <if test="record.manufacturer != null">
            manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
          </if>
          <if test="record.userAgent != null">
            userAgent = #{record.userAgent,jdbcType=VARCHAR},
          </if>
          <if test="record.createdAt != null">
            createdAt = #{record.createdAt,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    where id = #{record.id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rcloud.server.sealtalk.domain.LoginLogs">
    update login_logs
    set userId = #{userId,jdbcType=INTEGER},
      ipAddress = #{ipAddress,jdbcType=INTEGER},
      os = #{os,jdbcType=VARCHAR},
      osVersion = #{osVersion,jdbcType=VARCHAR},
      carrier = #{carrier,jdbcType=VARCHAR},
      device = #{device,jdbcType=VARCHAR},
      manufacturer = #{manufacturer,jdbcType=VARCHAR},
      userAgent = #{userAgent,jdbcType=VARCHAR},
      createdAt = #{createdAt,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.rcloud.server.sealtalk.domain.LoginLogsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from login_logs
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        id, userId, ipAddress, os, osVersion, carrier, device, manufacturer, userAgent, createdAt
          
      </otherwise>
    </choose>
    from login_logs
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into login_logs
    (id, userId, ipAddress, os, osVersion, carrier, device, manufacturer, userAgent, 
      createdAt)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.userId,jdbcType=INTEGER}, #{item.ipAddress,jdbcType=INTEGER}, 
        #{item.os,jdbcType=VARCHAR}, #{item.osVersion,jdbcType=VARCHAR}, #{item.carrier,jdbcType=VARCHAR}, 
        #{item.device,jdbcType=VARCHAR}, #{item.manufacturer,jdbcType=VARCHAR}, #{item.userAgent,jdbcType=VARCHAR}, 
        #{item.createdAt,jdbcType=TIMESTAMP})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into login_logs (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'userId'.toString() == column.value">
          #{item.userId,jdbcType=INTEGER}
        </if>
        <if test="'ipAddress'.toString() == column.value">
          #{item.ipAddress,jdbcType=INTEGER}
        </if>
        <if test="'os'.toString() == column.value">
          #{item.os,jdbcType=VARCHAR}
        </if>
        <if test="'osVersion'.toString() == column.value">
          #{item.osVersion,jdbcType=VARCHAR}
        </if>
        <if test="'carrier'.toString() == column.value">
          #{item.carrier,jdbcType=VARCHAR}
        </if>
        <if test="'device'.toString() == column.value">
          #{item.device,jdbcType=VARCHAR}
        </if>
        <if test="'manufacturer'.toString() == column.value">
          #{item.manufacturer,jdbcType=VARCHAR}
        </if>
        <if test="'userAgent'.toString() == column.value">
          #{item.userAgent,jdbcType=VARCHAR}
        </if>
        <if test="'createdAt'.toString() == column.value">
          #{item.createdAt,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into login_logs
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.userId != null">
            userId,
          </if>
          <if test="record.ipAddress != null">
            ipAddress,
          </if>
          <if test="record.os != null">
            os,
          </if>
          <if test="record.osVersion != null">
            osVersion,
          </if>
          <if test="record.carrier != null">
            carrier,
          </if>
          <if test="record.device != null">
            device,
          </if>
          <if test="record.manufacturer != null">
            manufacturer,
          </if>
          <if test="record.userAgent != null">
            userAgent,
          </if>
          <if test="record.createdAt != null">
            createdAt,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.userId != null">
            #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.ipAddress != null">
            #{record.ipAddress,jdbcType=INTEGER},
          </if>
          <if test="record.os != null">
            #{record.os,jdbcType=VARCHAR},
          </if>
          <if test="record.osVersion != null">
            #{record.osVersion,jdbcType=VARCHAR},
          </if>
          <if test="record.carrier != null">
            #{record.carrier,jdbcType=VARCHAR},
          </if>
          <if test="record.device != null">
            #{record.device,jdbcType=VARCHAR},
          </if>
          <if test="record.manufacturer != null">
            #{record.manufacturer,jdbcType=VARCHAR},
          </if>
          <if test="record.userAgent != null">
            #{record.userAgent,jdbcType=VARCHAR},
          </if>
          <if test="record.createdAt != null">
            #{record.createdAt,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    on duplicate key update 
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.userId != null">
            userId = #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.ipAddress != null">
            ipAddress = #{record.ipAddress,jdbcType=INTEGER},
          </if>
          <if test="record.os != null">
            os = #{record.os,jdbcType=VARCHAR},
          </if>
          <if test="record.osVersion != null">
            osVersion = #{record.osVersion,jdbcType=VARCHAR},
          </if>
          <if test="record.carrier != null">
            carrier = #{record.carrier,jdbcType=VARCHAR},
          </if>
          <if test="record.device != null">
            device = #{record.device,jdbcType=VARCHAR},
          </if>
          <if test="record.manufacturer != null">
            manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
          </if>
          <if test="record.userAgent != null">
            userAgent = #{record.userAgent,jdbcType=VARCHAR},
          </if>
          <if test="record.createdAt != null">
            createdAt = #{record.createdAt,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <update id="upsertByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update login_logs
    set
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            id = #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.userId != null">
            userId = #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.ipAddress != null">
            ipAddress = #{record.ipAddress,jdbcType=INTEGER},
          </if>
          <if test="record.os != null">
            os = #{record.os,jdbcType=VARCHAR},
          </if>
          <if test="record.osVersion != null">
            osVersion = #{record.osVersion,jdbcType=VARCHAR},
          </if>
          <if test="record.carrier != null">
            carrier = #{record.carrier,jdbcType=VARCHAR},
          </if>
          <if test="record.device != null">
            device = #{record.device,jdbcType=VARCHAR},
          </if>
          <if test="record.manufacturer != null">
            manufacturer = #{record.manufacturer,jdbcType=VARCHAR},
          </if>
          <if test="record.userAgent != null">
            userAgent = #{record.userAgent,jdbcType=VARCHAR},
          </if>
          <if test="record.createdAt != null">
            createdAt = #{record.createdAt,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    ;
    insert into login_logs
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.id != null">
            id,
          </if>
          <if test="record.userId != null">
            userId,
          </if>
          <if test="record.ipAddress != null">
            ipAddress,
          </if>
          <if test="record.os != null">
            os,
          </if>
          <if test="record.osVersion != null">
            osVersion,
          </if>
          <if test="record.carrier != null">
            carrier,
          </if>
          <if test="record.device != null">
            device,
          </if>
          <if test="record.manufacturer != null">
            manufacturer,
          </if>
          <if test="record.userAgent != null">
            userAgent,
          </if>
          <if test="record.createdAt != null">
            createdAt,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.id != null">
            #{record.id,jdbcType=INTEGER},
          </if>
          <if test="record.userId != null">
            #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.ipAddress != null">
            #{record.ipAddress,jdbcType=INTEGER},
          </if>
          <if test="record.os != null">
            #{record.os,jdbcType=VARCHAR},
          </if>
          <if test="record.osVersion != null">
            #{record.osVersion,jdbcType=VARCHAR},
          </if>
          <if test="record.carrier != null">
            #{record.carrier,jdbcType=VARCHAR},
          </if>
          <if test="record.device != null">
            #{record.device,jdbcType=VARCHAR},
          </if>
          <if test="record.manufacturer != null">
            #{record.manufacturer,jdbcType=VARCHAR},
          </if>
          <if test="record.userAgent != null">
            #{record.userAgent,jdbcType=VARCHAR},
          </if>
          <if test="record.createdAt != null">
            #{record.createdAt,jdbcType=TIMESTAMP},
          </if>
        </trim>
      </otherwise>
    </choose>
    from dual where not exists
    (
    select 1 from login_logs
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )
  </update>
  <insert id="upsert" parameterType="com.rcloud.server.sealtalk.domain.LoginLogs">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into login_logs
    (id, userId, ipAddress, os, osVersion, carrier, device, manufacturer, userAgent, 
      createdAt)
    values
    (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{ipAddress,jdbcType=INTEGER}, 
      #{os,jdbcType=VARCHAR}, #{osVersion,jdbcType=VARCHAR}, #{carrier,jdbcType=VARCHAR}, 
      #{device,jdbcType=VARCHAR}, #{manufacturer,jdbcType=VARCHAR}, #{userAgent,jdbcType=VARCHAR}, 
      #{createdAt,jdbcType=TIMESTAMP})
    on duplicate key update 
    id = #{id,jdbcType=INTEGER}, 
    userId = #{userId,jdbcType=INTEGER}, 
    ipAddress = #{ipAddress,jdbcType=INTEGER}, 
    os = #{os,jdbcType=VARCHAR}, 
    osVersion = #{osVersion,jdbcType=VARCHAR}, 
    carrier = #{carrier,jdbcType=VARCHAR}, 
    device = #{device,jdbcType=VARCHAR}, 
    manufacturer = #{manufacturer,jdbcType=VARCHAR}, 
    userAgent = #{userAgent,jdbcType=VARCHAR}, 
    createdAt = #{createdAt,jdbcType=TIMESTAMP}
  </insert>
  <update id="upsertByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update login_logs
    set
    id = #{record.id,jdbcType=INTEGER}, 
    userId = #{record.userId,jdbcType=INTEGER}, 
    ipAddress = #{record.ipAddress,jdbcType=INTEGER}, 
    os = #{record.os,jdbcType=VARCHAR}, 
    osVersion = #{record.osVersion,jdbcType=VARCHAR}, 
    carrier = #{record.carrier,jdbcType=VARCHAR}, 
    device = #{record.device,jdbcType=VARCHAR}, 
    manufacturer = #{record.manufacturer,jdbcType=VARCHAR}, 
    userAgent = #{record.userAgent,jdbcType=VARCHAR}, 
    createdAt = #{record.createdAt,jdbcType=TIMESTAMP}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    ;
    insert into login_logs
    (id, userId, ipAddress, os, osVersion, carrier, device, manufacturer, userAgent, 
      createdAt)
    select
    #{record.id,jdbcType=INTEGER}, #{record.userId,jdbcType=INTEGER}, #{record.ipAddress,jdbcType=INTEGER}, 
      #{record.os,jdbcType=VARCHAR}, #{record.osVersion,jdbcType=VARCHAR}, #{record.carrier,jdbcType=VARCHAR}, 
      #{record.device,jdbcType=VARCHAR}, #{record.manufacturer,jdbcType=VARCHAR}, #{record.userAgent,jdbcType=VARCHAR}, 
      #{record.createdAt,jdbcType=TIMESTAMP}
    from dual where not exists
    (
    select 1 from login_logs
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )
  </update>
  <insert id="batchUpsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into login_logs (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'id'.toString() == column.value">
          #{item.id,jdbcType=INTEGER}
        </if>
        <if test="'userId'.toString() == column.value">
          #{item.userId,jdbcType=INTEGER}
        </if>
        <if test="'ipAddress'.toString() == column.value">
          #{item.ipAddress,jdbcType=INTEGER}
        </if>
        <if test="'os'.toString() == column.value">
          #{item.os,jdbcType=VARCHAR}
        </if>
        <if test="'osVersion'.toString() == column.value">
          #{item.osVersion,jdbcType=VARCHAR}
        </if>
        <if test="'carrier'.toString() == column.value">
          #{item.carrier,jdbcType=VARCHAR}
        </if>
        <if test="'device'.toString() == column.value">
          #{item.device,jdbcType=VARCHAR}
        </if>
        <if test="'manufacturer'.toString() == column.value">
          #{item.manufacturer,jdbcType=VARCHAR}
        </if>
        <if test="'userAgent'.toString() == column.value">
          #{item.userAgent,jdbcType=VARCHAR}
        </if>
        <if test="'createdAt'.toString() == column.value">
          #{item.createdAt,jdbcType=TIMESTAMP}
        </if>
      </foreach>
      )
    </foreach>
    on duplicate key update 
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName} = values(${column.escapedColumnName})
    </foreach>
  </insert>
  <insert id="batchUpsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into login_logs
    (id, userId, ipAddress, os, osVersion, carrier, device, manufacturer, userAgent, 
      createdAt)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.id,jdbcType=INTEGER}, #{item.userId,jdbcType=INTEGER}, #{item.ipAddress,jdbcType=INTEGER}, 
        #{item.os,jdbcType=VARCHAR}, #{item.osVersion,jdbcType=VARCHAR}, #{item.carrier,jdbcType=VARCHAR}, 
        #{item.device,jdbcType=VARCHAR}, #{item.manufacturer,jdbcType=VARCHAR}, #{item.userAgent,jdbcType=VARCHAR}, 
        #{item.createdAt,jdbcType=TIMESTAMP})
    </foreach>
    on duplicate key update 
    id = values(id),
    userId = values(userId),
    ipAddress = values(ipAddress),
    os = values(os),
    osVersion = values(osVersion),
    carrier = values(carrier),
    device = values(device),
    manufacturer = values(manufacturer),
    userAgent = values(userAgent),
    createdAt = values(createdAt)
  </insert>
</mapper>
<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.rcloud.server.sealtalk.dao.DataVersionsMapper">
  <resultMap id="BaseResultMap" type="com.rcloud.server.sealtalk.domain.DataVersions">
    <id column="userId" jdbcType="INTEGER" property="userId" />
    <result column="userVersion" jdbcType="BIGINT" property="userVersion" />
    <result column="blacklistVersion" jdbcType="BIGINT" property="blacklistVersion" />
    <result column="friendshipVersion" jdbcType="BIGINT" property="friendshipVersion" />
    <result column="groupVersion" jdbcType="BIGINT" property="groupVersion" />
    <result column="groupMemberVersion" jdbcType="BIGINT" property="groupMemberVersion" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    userId, userVersion, blacklistVersion, friendshipVersion, groupVersion, groupMemberVersion
  </sql>
  <select id="selectByExample" parameterType="com.rcloud.server.sealtalk.domain.DataVersionsExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from data_versions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    <if test="rows != null">
      <if test="offset != null">
        limit ${offset}, ${rows}
      </if>
      <if test="offset == null">
        limit ${rows}
      </if>
    </if>
  </select>
  <select id="selectByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <if test="example.distinct">
      distinct
    </if>
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        userId, userVersion, blacklistVersion, friendshipVersion, groupVersion, groupMemberVersion
          
      </otherwise>
    </choose>
    from data_versions
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from data_versions
    where userId = #{userId,jdbcType=INTEGER}
  </select>
  <select id="selectByPrimaryKeySelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        userId, userVersion, blacklistVersion, friendshipVersion, groupVersion, groupMemberVersion
          
      </otherwise>
    </choose>
    from data_versions
    where userId = #{userId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from data_versions
    where userId = #{userId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.rcloud.server.sealtalk.domain.DataVersionsExample">
    delete from data_versions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.rcloud.server.sealtalk.domain.DataVersions">
    insert into data_versions (userId, userVersion, blacklistVersion, 
      friendshipVersion, groupVersion, groupMemberVersion
      )
    values (#{userId,jdbcType=INTEGER}, #{userVersion,jdbcType=BIGINT}, #{blacklistVersion,jdbcType=BIGINT}, 
      #{friendshipVersion,jdbcType=BIGINT}, #{groupVersion,jdbcType=BIGINT}, #{groupMemberVersion,jdbcType=BIGINT}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into data_versions
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.userId != null">
            userId,
          </if>
          <if test="record.userVersion != null">
            userVersion,
          </if>
          <if test="record.blacklistVersion != null">
            blacklistVersion,
          </if>
          <if test="record.friendshipVersion != null">
            friendshipVersion,
          </if>
          <if test="record.groupVersion != null">
            groupVersion,
          </if>
          <if test="record.groupMemberVersion != null">
            groupMemberVersion,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.userId != null">
            #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.userVersion != null">
            #{record.userVersion,jdbcType=BIGINT},
          </if>
          <if test="record.blacklistVersion != null">
            #{record.blacklistVersion,jdbcType=BIGINT},
          </if>
          <if test="record.friendshipVersion != null">
            #{record.friendshipVersion,jdbcType=BIGINT},
          </if>
          <if test="record.groupVersion != null">
            #{record.groupVersion,jdbcType=BIGINT},
          </if>
          <if test="record.groupMemberVersion != null">
            #{record.groupMemberVersion,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.rcloud.server.sealtalk.domain.DataVersionsExample" resultType="java.lang.Long">
    select count(*) from data_versions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update data_versions
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.userId != null">
            userId = #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.userVersion != null">
            userVersion = #{record.userVersion,jdbcType=BIGINT},
          </if>
          <if test="record.blacklistVersion != null">
            blacklistVersion = #{record.blacklistVersion,jdbcType=BIGINT},
          </if>
          <if test="record.friendshipVersion != null">
            friendshipVersion = #{record.friendshipVersion,jdbcType=BIGINT},
          </if>
          <if test="record.groupVersion != null">
            groupVersion = #{record.groupVersion,jdbcType=BIGINT},
          </if>
          <if test="record.groupMemberVersion != null">
            groupMemberVersion = #{record.groupMemberVersion,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update data_versions
    set userId = #{record.userId,jdbcType=INTEGER},
      userVersion = #{record.userVersion,jdbcType=BIGINT},
      blacklistVersion = #{record.blacklistVersion,jdbcType=BIGINT},
      friendshipVersion = #{record.friendshipVersion,jdbcType=BIGINT},
      groupVersion = #{record.groupVersion,jdbcType=BIGINT},
      groupMemberVersion = #{record.groupMemberVersion,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update data_versions
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.userVersion != null">
            userVersion = #{record.userVersion,jdbcType=BIGINT},
          </if>
          <if test="record.blacklistVersion != null">
            blacklistVersion = #{record.blacklistVersion,jdbcType=BIGINT},
          </if>
          <if test="record.friendshipVersion != null">
            friendshipVersion = #{record.friendshipVersion,jdbcType=BIGINT},
          </if>
          <if test="record.groupVersion != null">
            groupVersion = #{record.groupVersion,jdbcType=BIGINT},
          </if>
          <if test="record.groupMemberVersion != null">
            groupMemberVersion = #{record.groupMemberVersion,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    where userId = #{record.userId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.rcloud.server.sealtalk.domain.DataVersions">
    update data_versions
    set userVersion = #{userVersion,jdbcType=BIGINT},
      blacklistVersion = #{blacklistVersion,jdbcType=BIGINT},
      friendshipVersion = #{friendshipVersion,jdbcType=BIGINT},
      groupVersion = #{groupVersion,jdbcType=BIGINT},
      groupMemberVersion = #{groupMemberVersion,jdbcType=BIGINT}
    where userId = #{userId,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.rcloud.server.sealtalk.domain.DataVersionsExample" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <include refid="Base_Column_List" />
    from data_versions
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <select id="selectOneByExampleSelective" parameterType="map" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        userId, userVersion, blacklistVersion, friendshipVersion, groupVersion, groupMemberVersion
          
      </otherwise>
    </choose>
    from data_versions
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    <if test="example.orderByClause != null">
      order by ${example.orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into data_versions
    (userId, userVersion, blacklistVersion, friendshipVersion, groupVersion, groupMemberVersion
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId,jdbcType=INTEGER}, #{item.userVersion,jdbcType=BIGINT}, #{item.blacklistVersion,jdbcType=BIGINT}, 
        #{item.friendshipVersion,jdbcType=BIGINT}, #{item.groupVersion,jdbcType=BIGINT}, 
        #{item.groupMemberVersion,jdbcType=BIGINT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into data_versions (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'userId'.toString() == column.value">
          #{item.userId,jdbcType=INTEGER}
        </if>
        <if test="'userVersion'.toString() == column.value">
          #{item.userVersion,jdbcType=BIGINT}
        </if>
        <if test="'blacklistVersion'.toString() == column.value">
          #{item.blacklistVersion,jdbcType=BIGINT}
        </if>
        <if test="'friendshipVersion'.toString() == column.value">
          #{item.friendshipVersion,jdbcType=BIGINT}
        </if>
        <if test="'groupVersion'.toString() == column.value">
          #{item.groupVersion,jdbcType=BIGINT}
        </if>
        <if test="'groupMemberVersion'.toString() == column.value">
          #{item.groupMemberVersion,jdbcType=BIGINT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
  <insert id="upsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into data_versions
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.userId != null">
            userId,
          </if>
          <if test="record.userVersion != null">
            userVersion,
          </if>
          <if test="record.blacklistVersion != null">
            blacklistVersion,
          </if>
          <if test="record.friendshipVersion != null">
            friendshipVersion,
          </if>
          <if test="record.groupVersion != null">
            groupVersion,
          </if>
          <if test="record.groupMemberVersion != null">
            groupMemberVersion,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.userId != null">
            #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.userVersion != null">
            #{record.userVersion,jdbcType=BIGINT},
          </if>
          <if test="record.blacklistVersion != null">
            #{record.blacklistVersion,jdbcType=BIGINT},
          </if>
          <if test="record.friendshipVersion != null">
            #{record.friendshipVersion,jdbcType=BIGINT},
          </if>
          <if test="record.groupVersion != null">
            #{record.groupVersion,jdbcType=BIGINT},
          </if>
          <if test="record.groupMemberVersion != null">
            #{record.groupMemberVersion,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    on duplicate key update 
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.userId != null">
            userId = #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.userVersion != null">
            userVersion = #{record.userVersion,jdbcType=BIGINT},
          </if>
          <if test="record.blacklistVersion != null">
            blacklistVersion = #{record.blacklistVersion,jdbcType=BIGINT},
          </if>
          <if test="record.friendshipVersion != null">
            friendshipVersion = #{record.friendshipVersion,jdbcType=BIGINT},
          </if>
          <if test="record.groupVersion != null">
            groupVersion = #{record.groupVersion,jdbcType=BIGINT},
          </if>
          <if test="record.groupMemberVersion != null">
            groupMemberVersion = #{record.groupMemberVersion,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <update id="upsertByExampleSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update data_versions
    set
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.userId != null">
            userId = #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.userVersion != null">
            userVersion = #{record.userVersion,jdbcType=BIGINT},
          </if>
          <if test="record.blacklistVersion != null">
            blacklistVersion = #{record.blacklistVersion,jdbcType=BIGINT},
          </if>
          <if test="record.friendshipVersion != null">
            friendshipVersion = #{record.friendshipVersion,jdbcType=BIGINT},
          </if>
          <if test="record.groupVersion != null">
            groupVersion = #{record.groupVersion,jdbcType=BIGINT},
          </if>
          <if test="record.groupMemberVersion != null">
            groupMemberVersion = #{record.groupMemberVersion,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    ;
    insert into data_versions
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.userId != null">
            userId,
          </if>
          <if test="record.userVersion != null">
            userVersion,
          </if>
          <if test="record.blacklistVersion != null">
            blacklistVersion,
          </if>
          <if test="record.friendshipVersion != null">
            friendshipVersion,
          </if>
          <if test="record.groupVersion != null">
            groupVersion,
          </if>
          <if test="record.groupMemberVersion != null">
            groupMemberVersion,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    select
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.userId != null">
            #{record.userId,jdbcType=INTEGER},
          </if>
          <if test="record.userVersion != null">
            #{record.userVersion,jdbcType=BIGINT},
          </if>
          <if test="record.blacklistVersion != null">
            #{record.blacklistVersion,jdbcType=BIGINT},
          </if>
          <if test="record.friendshipVersion != null">
            #{record.friendshipVersion,jdbcType=BIGINT},
          </if>
          <if test="record.groupVersion != null">
            #{record.groupVersion,jdbcType=BIGINT},
          </if>
          <if test="record.groupMemberVersion != null">
            #{record.groupMemberVersion,jdbcType=BIGINT},
          </if>
        </trim>
      </otherwise>
    </choose>
    from dual where not exists
    (
    select 1 from data_versions
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )
  </update>
  <insert id="upsert" parameterType="com.rcloud.server.sealtalk.domain.DataVersions">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into data_versions
    (userId, userVersion, blacklistVersion, friendshipVersion, groupVersion, groupMemberVersion
      )
    values
    (#{userId,jdbcType=INTEGER}, #{userVersion,jdbcType=BIGINT}, #{blacklistVersion,jdbcType=BIGINT}, 
      #{friendshipVersion,jdbcType=BIGINT}, #{groupVersion,jdbcType=BIGINT}, #{groupMemberVersion,jdbcType=BIGINT}
      )
    on duplicate key update 
    userId = #{userId,jdbcType=INTEGER}, 
    userVersion = #{userVersion,jdbcType=BIGINT}, 
    blacklistVersion = #{blacklistVersion,jdbcType=BIGINT}, 
    friendshipVersion = #{friendshipVersion,jdbcType=BIGINT}, 
    groupVersion = #{groupVersion,jdbcType=BIGINT}, 
    groupMemberVersion = #{groupMemberVersion,jdbcType=BIGINT}
  </insert>
  <update id="upsertByExample" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    update data_versions
    set
    userId = #{record.userId,jdbcType=INTEGER}, 
    userVersion = #{record.userVersion,jdbcType=BIGINT}, 
    blacklistVersion = #{record.blacklistVersion,jdbcType=BIGINT}, 
    friendshipVersion = #{record.friendshipVersion,jdbcType=BIGINT}, 
    groupVersion = #{record.groupVersion,jdbcType=BIGINT}, 
    groupMemberVersion = #{record.groupMemberVersion,jdbcType=BIGINT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    ;
    insert into data_versions
    (userId, userVersion, blacklistVersion, friendshipVersion, groupVersion, groupMemberVersion
      )
    select
    #{record.userId,jdbcType=INTEGER}, #{record.userVersion,jdbcType=BIGINT}, #{record.blacklistVersion,jdbcType=BIGINT}, 
      #{record.friendshipVersion,jdbcType=BIGINT}, #{record.groupVersion,jdbcType=BIGINT}, 
      #{record.groupMemberVersion,jdbcType=BIGINT}
    from dual where not exists
    (
    select 1 from data_versions
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
    )
  </update>
  <insert id="batchUpsertSelective" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into data_versions (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'userId'.toString() == column.value">
          #{item.userId,jdbcType=INTEGER}
        </if>
        <if test="'userVersion'.toString() == column.value">
          #{item.userVersion,jdbcType=BIGINT}
        </if>
        <if test="'blacklistVersion'.toString() == column.value">
          #{item.blacklistVersion,jdbcType=BIGINT}
        </if>
        <if test="'friendshipVersion'.toString() == column.value">
          #{item.friendshipVersion,jdbcType=BIGINT}
        </if>
        <if test="'groupVersion'.toString() == column.value">
          #{item.groupVersion,jdbcType=BIGINT}
        </if>
        <if test="'groupMemberVersion'.toString() == column.value">
          #{item.groupMemberVersion,jdbcType=BIGINT}
        </if>
      </foreach>
      )
    </foreach>
    on duplicate key update 
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName} = values(${column.escapedColumnName})
    </foreach>
  </insert>
  <insert id="batchUpsert" parameterType="map">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      @project https://github.com/itfsw/mybatis-generator-plugin
    -->
    insert into data_versions
    (userId, userVersion, blacklistVersion, friendshipVersion, groupVersion, groupMemberVersion
      )
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.userId,jdbcType=INTEGER}, #{item.userVersion,jdbcType=BIGINT}, #{item.blacklistVersion,jdbcType=BIGINT}, 
        #{item.friendshipVersion,jdbcType=BIGINT}, #{item.groupVersion,jdbcType=BIGINT}, 
        #{item.groupMemberVersion,jdbcType=BIGINT})
    </foreach>
    on duplicate key update 
    userId = values(userId),
    userVersion = values(userVersion),
    blacklistVersion = values(blacklistVersion),
    friendshipVersion = values(friendshipVersion),
    groupVersion = values(groupVersion),
    groupMemberVersion = values(groupMemberVersion)
  </insert>
</mapper>